/*****************************
 Компьютерный практикум №4
 ФИ-52, Я. Кратт, М. Бурлака
 *****************************/
import java.util.ArrayList;
import java.util.concurrent.*;

public class ParalelBrutL3 implements Callable<ArrayList<Long>> {
    long start;
    long end;
    ArrayList<Long> x;
    ArrayList<Long> y;
    String z
    int arr[] = new int[z.toCharArray().length];
    ParalelBrutL3(long start, long end, ArrayList<Long> x, ArrayList<Long> y) {
        this.start = start;
        this.end = end;
        this.x = x;
        this.y = y;
        for (int i = 0; i < z.toCharArray().length; i++) {
            arr[i] = Integer.parseInt(String.valueOf(z.toCharArray()[i]));
        }
    }
    public ArrayList<Long> call() throws Exception
    {
        ArrayList<Long> L3 = new ArrayList<Long>();
        bigCycle: for(long i=start;i<end;i++) {
            cycleX:
            for (long X : x)
                cycleY:for (long Y : y) {
                    Geffe a = new Geffe(X, Y, i);
                    for (int j = 0; j < 300; j++) {
                        long x1 = a.L1();
                        long y1 = a.L2();
                        long s1=a.L3();
                        if (s1 == 1)
                        {
                            if (x1 != arr[j])
                            {
                                continue cycleX;
                            }
                        }
                        if (s1 == 0)
                        {
                            if (y1 != arr[j])
                            {
                                continue cycleY;
                            }
                        }
                    }
                    L3.add(i);
                    System.out.println("x:" +String.format("%30s", Integer.toBinaryString((int) X)).replace(' ', '0'));
                    System.out.println("y:" + String.format("%31s", Integer.toBinaryString((int) Y)).replace(' ', '0'));
                    System.out.println("s:" + String.format("%32s", Integer.toBinaryString((int) i)).replace(' ', '0'));
                    System.out.println("finished 3");
                    Geffe gen=new Geffe(X,Y,i);
                    String findZ="";
                    for(int f=0;f<2048;f++)
                        findZ=findZ+Integer.toString((int) gen.geffe());
                    System.out.println("founded z: "+findZ);
                    System.out.println("z: " +z);
                    break bigCycle;

                }
        }
        return L3;
    }
}